builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: helm

version:
  semver:
    major: 1
    minor: 0
    patch: 1
    labelTemplate: '{{branch}}-{{auto}}'
    releaseBranch: 1.0.1

stages:
  lint-and-package:
    parallelStages:
      lint-helm-chart:
        image: extensions/helm:dev
        action: lint

      package-helm-chart:
        image: extensions/helm:dev
        action: package

  test-helm-chart:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.19
      readiness:
        path: /kubernetes-ready
        port: 10080
        timeoutSeconds: 120
    image: extensions/helm:dev
    action: test
    values: |-
      db:
        conf:
          single-node: true
        statefulset:
          replicas: 1
        storage:
          persistentVolume:
            enabled: false
            size: 1Gi
        tls:
          enabled: false

      api:
        deployment:
          extraVolumes: |
          extraVolumeMounts: |

      db-migrator:
        job:
          env:
          - name: COCKROACH_CONNECTION_STRING
            value: postgresql://root@estafette-ci-db-public:26257/defaultdb?sslmode=disable
          extraVolumes: |
          extraVolumeMounts: |

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: main

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish
    repoBranch: main

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  release:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: main

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge
        repoBranch: main

      create-github-release:
        image: extensions/github-release:dev

  helm-diff:
    stages:
      diff:
        image: extensions/helm:dev
        credentials: gke-tooling
        action: diff
        tillerless: true
        namespace: estafette-ci

  tooling-estafette:
    actions:
    - name: diff
    - name: install
    stages:
      deploy:
        image: extensions/helm:dev
        namespace: estafette-ci
        release: estafette-ci
        timeout: 300s
        values: |-
          db:
            enabled: true
            image:
              credentials:
                registry: docker.io
                username: estafette.secret(mITm_O9WNW4xh5nx.Kg69U81Foi44-zavlF_LTQwyLwocgEbd2nayC0vR0g==.ORWoTdFf7yQ143Cmg07YzWbiXhmUlol4p5SYfbdNl0dtz86mYknh7LUlGweWnCA0Zg==)
                password: estafette.secret(nA7jGNDWG5ImOFQO.epJBszHzbJv2Vr0cTi9e8yAYtm5uZD7BOt9sxl2s0GB97Z9OrOtmJkKX3Z3k47DXeDP6cg==.eZ9WuXXyc5q0A6RMCHYLpHBc7zMlOC6Ya9881xH_z2UnMNbtJ2xu3Plp-jPLWAqbhg==)
            conf:
              locality: continent=europe,country=belgium,region=europe-west1
              join:
              - cockroachdb-0.cockroachdb.estafette-ci.svc.cluster.local
              - cockroachdb-1.cockroachdb.estafette-ci.svc.cluster.local
              - cockroachdb-2.cockroachdb.estafette-ci.svc.cluster.local
            statefulset:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/path: "/_status/vars"
                prometheus.io/port: "8080"
                prometheus.io/scheme: "https"
              resources:
                requests:
                  cpu: 5000m
                  memory: 12Gi
                limits:
                  memory: 12Gi
              tolerations:
              - effect: NoSchedule
                key: cloud.google.com/gke-preemptible
                operator: Equal
                value: "true"
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 10
                  preference:
                    matchExpressions:
                    - key: cloud.google.com/gke-preemptible
                      operator: In
                      values:
                      - "true"
              podAntiAffinity:
                type: hard
            service:
              public:
                type: NodePort
                annotations:
                  prometheus.io/probe: "true"
                  prometheus.io/probe-path: "/health"
                  cloud.google.com/neg: '{"ingress": true}'
              discovery:
                annotations:
                  prometheus.io/scheme: "https"
            ingress:
              enabled: false
            storage:
              persistentVolume:
                enabled: true
                size: 50Gi
                storageClass: fast
            iap:
              enabled: false

          api:
            enabled: false

          web:
            enabled: false

          db-migrator:
            enabled: false

          cron-event-sender:
            enabled: false

          metrics:
            enabled: true
            server:
              replicaCount: 2
              statefulSet:
                enabled: true
              persistentVolume:
                enabled: true

            serverFiles:
              prometheus.yml:
                scrape_configs:
                  - job_name: 'kubernetes-nodes-resource'
                    scheme: https
                    tls_config:
                      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      insecure_skip_verify: true
                    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    kubernetes_sd_configs:
                      - role: node
                    relabel_configs:
                      - action: labelmap
                        regex: __meta_kubernetes_node_label_(.+)
                      - target_label: __address__
                        replacement: kubernetes.default.svc:443
                      - source_labels: [__meta_kubernetes_node_name]
                        regex: (.+)
                        target_label: __metrics_path__
                        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
                    metric_relabel_configs:
                      # keep only the metrics required to calculate max cpu/memory usage by a build/release job
                      - source_labels: [__name__]
                        action: keep
                        regex: container_cpu_usage_seconds_total|container_memory_working_set_bytes
                      # keep only for namespace running build/release jobs
                      - source_labels: [namespace]
                        action: keep
                        regex: .+-jobs

          queue:
            enabled: true

            cluster:
              enabled: true
              replicas: 3

            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: queue
                      app.kubernetes.io/instance: estafette-ci

  release:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: main

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge
        repoBranch: main

      create-github-release:
        image: extensions/github-release:dev